<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BillingManager.Infra.Data</name>
    </assembly>
    <members>
        <member name="T:BillingManager.Infra.Data.Configurations.BaseEntityConfiguration`1">
            <summary>
            BaseEntity entity configuration
            </summary>
            <typeparam name="TEntity">Entity based in BaseEntity</typeparam>
        </member>
        <member name="T:BillingManager.Infra.Data.Configurations.BillingEntityConfiguration">
            <summary>
            Billing entity database configuration
            </summary>
        </member>
        <member name="T:BillingManager.Infra.Data.Configurations.BillingLineEntityConfiguration">
            <summary>
            Billing lines entity database configuration
            </summary>
        </member>
        <member name="T:BillingManager.Infra.Data.Configurations.CustomerEntityTypeConfiguration">
            <summary>
            Customer entity database configuration
            </summary>
        </member>
        <member name="T:BillingManager.Infra.Data.Configurations.ProductEntityConfiguration">
            <summary>
            Product entity database configuration
            </summary>
        </member>
        <member name="T:BillingManager.Infra.Data.Migrations.InitialMigration">
            <inheritdoc />
        </member>
        <member name="M:BillingManager.Infra.Data.Migrations.InitialMigration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:BillingManager.Infra.Data.Migrations.InitialMigration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:BillingManager.Infra.Data.Migrations.InitialMigration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:BillingManager.Infra.Data.Repositories.Interfaces.IRepository`1">
            <summary>
            Generic repository
            </summary>
            <typeparam name="TEntity">Entity type</typeparam>
        </member>
        <member name="M:BillingManager.Infra.Data.Repositories.Interfaces.IRepository`1.GetByIdAsync(System.Guid)">
            <summary>
            Get entity by id
            </summary>
            <param name="id">Guid identifier</param>
            <returns>Entity or null</returns>
        </member>
        <member name="M:BillingManager.Infra.Data.Repositories.Interfaces.IRepository`1.GetPaginateAsync(System.Int32,System.Int32)">
            <summary>
            Get paged entity list
            </summary>
            <param name="pageNumber">Page number</param>
            <param name="pageSize">Page size</param>
            <returns>Entity paged list</returns>
        </member>
        <member name="M:BillingManager.Infra.Data.Repositories.Interfaces.IRepository`1.GetPaginateAsync``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Get paged entity list (with filter and order by property)
            </summary>
            <param name="pageNumber">Page number</param>
            <param name="pageSize">Page size</param>
            <param name="orderByProperty">Order by property (lambda expression)</param>
            <param name="expression">Filter expression (lambda expression)</param>
            <returns>Returns paged, filtered and sorted entity</returns>
        </member>
        <member name="M:BillingManager.Infra.Data.Repositories.Interfaces.IRepository`1.CreateAsync(`0)">
            <summary>
            Create entity in database
            </summary>
            <param name="entity">New entity</param>
            <returns>New registered entity with identifier (guid)</returns>
        </member>
        <member name="M:BillingManager.Infra.Data.Repositories.Interfaces.IRepository`1.UpdateAsync(`0)">
            <summary>
            Update entity in database
            </summary>
            <param name="entity">Entity to update</param>
            <returns>Updated entity</returns>
        </member>
        <member name="M:BillingManager.Infra.Data.Repositories.Interfaces.IRepository`1.DeleteAsync(System.Guid)">
            <summary>
            Delete entity in database
            </summary>
            <param name="id">Identifier (guid)</param>
            <returns>Deleted entity</returns>
        </member>
        <member name="M:BillingManager.Infra.Data.Repositories.Repository`1.BuildPagedList``1(System.Linq.IQueryable{`0},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Build Paged List
            </summary>
            <param name="queryable">IQueryable entity data</param>
            <param name="parameters">Page number and page size</param>
            <param name="orderByProperty">Order by property (lambda expression)</param>
            <param name="expression">Filter expression (lambda expression)</param>
            <returns>Returns paged, filtered and sorted entity</returns>
        </member>
    </members>
</doc>
